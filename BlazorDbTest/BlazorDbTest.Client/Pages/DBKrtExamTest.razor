@page "/dbkrtexam"
@* HttpClient を受け取る *@
@inject HttpClient HttpClient
@using System.Text.Json;

<h3>DBKrtExamTest</h3>

<h4>○ 患者ID</h4>
<div class="part-group">
  <label>ID:</label>
  <InputText @bind-Value="PatientInfoModel.ID" autocomplete=off />
</div>

@* KRT *@
<EditForm EditContext="editContextKrtList" FormName="krtform" />
<h4>KRT測定値</h4>
<div class="part-group">
    <label>右眼 / 左眼</label>
	<div class="part-group">
		<label>角膜曲率半径(弱主経線)[mm]:</label>
    <input type="number" @bind-value=KrtListModel.RK1_mm />
    <input type="number" @bind-value=KrtListModel.LK1_mm />
	</div>
  <div class="part-group">
    <label>角膜曲率半径(強主経線)[mm]:</label>
    <input type="number" @bind-value=KrtListModel.RK2_mm />
    <input type="number" @bind-value=KrtListModel.LK2_mm />
  </div>
  <div class="part-group">
		<label>乱視度数[°]:</label>
		<input type="number" @bind-value=KrtListModel.RCyl_d />
		<input type="number" @bind-value=KrtListModel.LCyl_d />
  </div>
  <div>
    <label>Exam Date:</label>
    <InputDate @bind-Value="KrtListModel.ExamDateTime" max="@DateTime.Today.ToString("yyyy-MM-dd")" min="@MinDate" />
  </div>
</div>
<div>
  <button @onclick="KrtRegisterButtonClick">Register</button>
  <button @onclick="KrtViewButtonClick">View</button>
</div>
@if (krtList == null) {
  <p><em>Loading...</em></p>
} else {
  <table class="table">
    <thead>
      <tr>
        <th>ID</th>
        <th>K1(R)</th>
        <th>K1(L)</th>
        <th>K2(R)</th>
        <th>K2(L)</th>
        <th>AveK(R)</th>
        <th>AveK(L)</th>
        <th>Cyl(R)</th>
        <th>Cyl(L)</th>
        <th>Exam Date</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var krt in krtList) {
        <tr>
          <td>@krt.PatientID</td>
          <td>@krt.RK1_mm</td>
          <td>@krt.LK1_mm</td>
          <td>@krt.RK2_mm</td>
          <td>@krt.LK2_mm</td>
          <td>@krt.RAveK_mm</td>
          <td>@krt.LAveK_mm</td>
          <td>@krt.RCyl_d</td>
          <td>@krt.LCyl_d</td>
          <td>@krt.ExamDateTime</td>
        </tr>
      }
    </tbody>
  </table>
}

@code {
  private KrtList[]? krtList;
  private string MinDate = new DateTime(1990, 1, 1).ToString("yyyy-MM-dd");

  [SupplyParameterFromForm]
  private PatientInfo PatientInfoModel { get; set; } = default!;
  private KrtList KrtListModel { get; set; } = default!;
  private EditContext editContextPatientInfo { get; set; } = default!;
  private EditContext editContextKrtList { get; set; } = default!;

  protected override async Task OnInitializedAsync() {
    PatientInfoModel ??= new();
    PatientInfoModel.Gender = Gender.other;
    PatientInfoModel.BirthDate = DateTime.Today;
    editContextPatientInfo = new(PatientInfoModel);

    KrtListModel ??= new();
    KrtListModel.ExamDateTime = DateTime.Now;
    editContextKrtList = new(KrtListModel);
  }

  void KrtRegisterButtonClick() {
    Task.Run(() => SetKrtDataAsync());
	}

  /// <summary>
  /// DBへケラト測定値を書込み
  /// </summary>
  /// <returns></returns>
  protected async Task SetKrtDataAsync() {
    KrtListModel.PatientID = PatientInfoModel.ID;

    string content = $"api/DBKrtData/SetKrt/";
    content += JsonSerializer.Serialize(KrtListModel);

    await HttpClient.GetAsync(content);
  }

  void KrtViewButtonClick() {
    Task.Run(() => GetKrtListAsync());
  }

  /// <summary>
  /// DBからケラト測定値を取得
  /// </summary>
  /// <returns></returns>
  protected async Task GetKrtListAsync() {
    string content = $"api/DBKrtData/GetKrtList/";
    content += PatientInfoModel.ID;

    krtList = await HttpClient.GetFromJsonAsync<KrtList[]>(content);

    //画面を更新する
    StateHasChanged();
  }

}
