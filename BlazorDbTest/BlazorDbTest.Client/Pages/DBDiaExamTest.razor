@page "/dbdiaexam"
@* HttpClient を受け取る *@
@inject HttpClient HttpClient
@using System.Text.Json;

<h3>DBDiaExamTest</h3>

<h4>○ 患者ID</h4>
<div class="part-group">
  <label>ID:</label>
  <InputText @bind-Value="PatientInfoModel.ID" autocomplete=off />
</div>

@* DIA *@
<EditForm EditContext="editContextDiaList" FormName="diaform" />
<h4>DIA測定値</h4>
<div class="part-group">
    <label>右眼 / 左眼</label>
	<div class="part-group">
		<label>瞳孔径[mm]:</label>
    <input type="number" @bind-value=DiaListModel.RPupil />
    <input type="number" @bind-value=DiaListModel.LPupil />
	</div>
  <div>
    <label>Exam Date:</label>
    <InputDate @bind-Value="DiaListModel.ExamDateTime" max="@DateTime.Today.ToString("yyyy-MM-dd")" min="@MinDate" />
  </div>
</div>
<div>
  <button @onclick="DiaRegisterButtonClick">Register</button>
  <button @onclick="DiaViewButtonClick">View</button>
</div>
@if (diaList == null) {
  <p><em>Loading...</em></p>
} else {
  <table class="table">
    <thead>
      <tr>
        <th>ExamID(R)</th>
        <th>ExamID(L)</th>
        <th>ID</th>
        <th>Pupil(R)</th>
        <th>Pupil(L)</th>
        <th>Exam Date</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var dia in diaList) {
        <tr>
          <td>@dia.RExamID</td>
          <td>@dia.LExamID</td>
          <td>@dia.PatientID</td>
          <td>@dia.RPupil</td>
          <td>@dia.LPupil</td>
          <td>@dia.ExamDateTime</td>
        </tr>
      }
    </tbody>
  </table>
}
<div>
  <label>ID(R):</label>
  <input type="number" @bind-value=DiaListModel.RExamID />
  <label>ID(L):</label>
  <input type="number" @bind-value=DiaListModel.LExamID />
  <button @onclick="DeleteDiaListButtonClick">Delete</button>
</div>

@code {
    private DiaList[]? diaList;
    private string MinDate = new DateTime(1990, 1, 1).ToString("yyyy-MM-dd");

  [SupplyParameterFromForm]
  private PatientInfo PatientInfoModel { get; set; } = default!;
  private DiaList DiaListModel { get; set; } = default!;
  private EditContext editContextPatientInfo { get; set; } = default!;
  private EditContext editContextDiaList { get; set; } = default!;

  protected override async Task OnInitializedAsync() {
    PatientInfoModel ??= new();
    PatientInfoModel.Gender = Gender.other;
    PatientInfoModel.BirthDate = DateTime.Today;
    editContextPatientInfo = new(PatientInfoModel);

    DiaListModel ??= new();
    DiaListModel.ExamDateTime = DateTime.Today;
    editContextDiaList = new(DiaListModel);
  }

  void DiaRegisterButtonClick() {
    Task.Run(() => SetDiaDataAsync());
	}

  private JsonSerializerOptions options = new JsonSerializerOptions {
      Encoder = System.Text.Encodings.Web.JavaScriptEncoder.Create(System.Text.Unicode.UnicodeRanges.All)
    };

  /// <summary>
  /// DBへ瞳孔径測定値を書込み
  /// </summary>
  /// <returns></returns>
  protected async Task SetDiaDataAsync() {
    DiaListModel.PatientID = PatientInfoModel.ID;

    string url = $"api/DBDiaData/SetDia/";

    var conditions = JsonSerializer.Serialize(DiaListModel, options);
    var content = new StringContent(conditions, Encoding.UTF8, "application/json");

    var response = await HttpClient.PostAsync(url, content);
  }

  void DiaViewButtonClick() {
    Task.Run(() => GetDiaListAsync());
  }

  /// <summary>
  /// DBから瞳孔径測定値を取得
  /// </summary>
  /// <returns></returns>
  protected async Task GetDiaListAsync() {
    string content = $"api/DBDiaData/GetDiaList/";
    content += PatientInfoModel.ID;

    diaList = await HttpClient.GetFromJsonAsync<DiaList[]>(content);

    //画面を更新する
    StateHasChanged();
  }

  void DeleteDiaListButtonClick() {
    // 瞳孔径測定値リストから削除
    Task.Run(() => DeleteDiaListAsync());
  }

  /// <summary>
  /// DBから瞳孔径測定値を削除
  /// </summary>
  /// <returns></returns>
  protected async Task DeleteDiaListAsync() {
    string content = $"api/DBDiaData/DeleteDiaData/";

    await HttpClient.GetAsync(content + DiaListModel.RExamID);
    await HttpClient.GetAsync(content + DiaListModel.LExamID);
  }

}
